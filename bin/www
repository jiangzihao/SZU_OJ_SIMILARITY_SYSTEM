#!/usr/bin/env node

const app = require('../src/app')
const http = require('http')
const config = require('../src/config')

const port = normalizePort(process.env.port || config.port)

const server = http.createServer(app.callback()).listen(port)
server.on('error', onError)
server.on('listening', onListening)

function normalizePort(val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port > 0) {
    return port
  }

  return false
}

function onError(err) {
  if (err.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port
  
    switch(err.code) {
      case 'EACESS': 
        console.error(bind + ' requires evevalted privileges')
        process.exit(1)
      case 'EADDINUSE':
        console.error(bind + ' already in use')
        process.exit(1)
      default:
        throw error
    }
}

function onListening() {
  const addr = server.address()
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port

  console.log('Listening on ' + bind)
}